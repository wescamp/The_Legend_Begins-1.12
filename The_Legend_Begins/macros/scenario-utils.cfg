#textdomain wesnoth-The_Legend_Begins

#define TLB_AI_BOSS_TARGETING_ENGINE SIDE TARGETS_LIST
    [engine]
        name="lua"
        code= <<
            local ai = ...
            return wesnoth.require("~add-ons/The_Legend_Begins/lua/priority_target_engine.lua").init(ai)
        >>
    [/engine]
    [modify_ai]
        side={SIDE}
        action=add
        path="stage[main_loop].candidate_action[]"
        [candidate_action]
            engine=lua
            name=change_attacks_aspect
            id=change_attacks_aspect
            max_score=999999
            evaluation="return (...):change_attacks_aspect("+{TARGETS_LIST}+")"
            execution="(...):change_attacks_aspect()"
        [/candidate_action]
    [/modify_ai]
#enddef

# SCENARIO 48A MACROS
# lava spread (copied from HttT)
# Main

#define NEXT_LAVA
    [store_locations]
        variable=potential_locs
        terrain=Xu
        [filter_adjacent_location]
            terrain=U*, Re
            [filter_adjacent_location]
                terrain=U*, Re
                count=4-5
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [not]
            # don't start near the existing lava
            terrain=Ql
            radius=5
        [/not]
    [/store_locations]
    [if]
        [variable]
            name=potential_locs.length
            greater_than=0
        [/variable]
        [then]
            {VARIABLE lava_count 0}
            {VARIABLE randrange $potential_locs.length}
            {VARIABLE_OP randrange sub 1}
            {VARIABLE randrange "0..$randrange"}
            {RANDOM $randrange}
            {CLEAR_VARIABLE lava_body}
            {VARIABLE lava_body.x $potential_locs[$random].x}
            {VARIABLE lava_body.y $potential_locs[$random].y}
            [terrain]
                x=$lava_body.x
                y=$lava_body.y
                terrain=Ql
            [/terrain]
            {CLEAR_VARIABLE potential_locs}
            {CLEAR_VARIABLE randrange}
        [/then]
    [/if]
#enddef

# Starter

#define EXPAND_LAVA
    # the lava should expand to any cave floor that is not next to a cavewall,
    # or cave floor that is next to cavewall that is already next to lava
    # also if it comes near another lavabody, it should not expand in that direction

    # first we store cavewall that is not already next to this lava
    [store_locations]
        variable=far_walls
        terrain=Xu
        [not]
            find_in=lava_body
            radius=1
        [/not]
    [/store_locations]

    # next we store lava that is not part of this body
    [store_locations]
        variable=far_lava
        terrain=Ql
        [not]
            find_in=lava_body
        [/not]
    [/store_locations]

    # now we store cave floor nearby that doesn't approach the bad stuff
    [store_locations]
        variable=good_floor
        terrain=U*,Re
        [and]
            find_in=lava_body
            radius=1
        [/and]
        [not]
            find_in=far_walls
            radius=1
        [/not]
        [not]
            find_in=far_lava
            radius=1
        [/not]
        [not]
            # don't go anywhere near the cave floor around the scepter
            x,y=$scepter_x,$scepter_y
            radius=4
            [filter_radius]
                terrain=U*,Re
            [/filter_radius]
        [/not]
    [/store_locations]

    [if]
        [variable]
            name=good_floor.length
            greater_than=0
        [/variable]
        [then]
            {FOREACH good_floor i}
                [terrain]
                    x=$good_floor[$i].x
                    y=$good_floor[$i].y
                    terrain=Ql
                [/terrain]
            {NEXT i}
            [store_locations]
                variable=lava_body
                find_in=lava_body
                [or]
                    find_in=good_floor
                [/or]
            [/store_locations]
        [/then]
        [else]
            # this lava can't expand so force a new eruption
            {NEXT_LAVA}
        [/else]
    [/if]
    {CLEAR_VARIABLE far_walls}
    {CLEAR_VARIABLE far_lava}
    {CLEAR_VARIABLE good_floor}

    # everyone on lava dies
    # exceptions Greth (if you still have him)/ Loyal Spectre, Loyal Drake Bruner-line
    [kill]
        [not]
            type=Sky Drake,Drake Glider,Hurricane Drake,Spectre,Drake Burner,Drake Flare,Drake Flameheart,Fire Drake,Inferno Drake
        [/not]
        [filter_location]
            terrain=Ql
        [/filter_location]
        animate=yes
        fire_event=yes
    [/kill]
#enddef

# Event used in scenario

#define SCENARIO_EVENT_LAVA_EXPANSION

             [event]
                name=start
                {NEXT_LAVA}
             [/event]

             [event]
                name=moveto
                first_time_only=no
                [allow_undo]
                [/allow_undo]
                [filter]
                    side=1
                [/filter]
                {VARIABLE_OP rumble_test rand "1..35"}
                [if]
                    [variable]
                        name=rumble_test
                        numerical_equals=1
                    [/variable]
                    [then]
                        {QUAKE "rumble.ogg"}
                        {VARIABLE_OP lava_count add 1}
                        {EXPAND_LAVA}

                        # Reset the counter if it gets too large (it slows things down)
                        [if]
                            [variable]
                                name=lava_count
                                numerical_equals=3
                            [/variable]
                            [then]
                                {NEXT_LAVA}
                            [/then]
                        [/if]
                    [/then]
                [/if]
                {CLEAR_VARIABLE rumble_test}
            [/event]

#enddef 

#define NARRATOR_MESSAGE MESSAGE_TEXT
    [message]
        speaker=narrator
        message={MESSAGE_TEXT}
        image="wesnoth-icon.png"
    [/message]
#enddef

#define VARIABLE_NUM_LESS_OR_EQUAL_THAN VARIABLE RVALUE
    [variable]
	name={VARIABLE}
	less_than_equal_to={RVALUE}
    [/variable]
#enddef

#define FAKE_SCENERY_ANIM IMAGE FRAMES X Y TIME
{VARIABLE animcounter 1}
[while]
    [variable]
	name=animcounter
	less_than_equal_to={FRAMES}
    [/variable]
    [do]
	[item]
	    x={X}
	    y={Y}
	    halo={IMAGE}-($animcounter).png
	[/item]
    
	[delay]
	    time={TIME}
	[/delay]
    
	[remove_item]
	    x,y={X},{Y}
	[/remove_item]
{NEXT animcounter}
#enddef

#define ILLUMINATED_UNDERGROUND X Y
    [store_locations]
        x,y={X},{Y}
        radius=5
        variable=illuminated_locations2
    [/store_locations]

    [time_area]
        find_in=illuminated_locations2
        {DEFAULT_SCHEDULE_DUSK}
    [/time_area]

    {CLEAR_VARIABLE illuminated_locations2}
#enddef

#define ILLUMINATING_BRAZIER X Y
    [item]
       x,y={X},{Y}
       image="items/brazier-lit1.png"
    [/item]

    [item]
        x,y={X},{Y}
        halo=halo/fire-aura.png
    [/item]

    [store_locations]
        x,y={X},{Y}
        radius=2

        variable=illuminated_locations
    [/store_locations]

    [time_area]
        find_in=illuminated_locations

        {SCHEDULE_ILLUMINATED_MIDNIGHT}
    [/time_area]

    {CLEAR_VARIABLE illuminated_locations}
#enddef

#define LOOT AMOUNT SIDE
    {VARIABLE amount_gold {AMOUNT}}
   
    [message]
        side_for={SIDE}
        speaker=narrator
        message= _ "You retrieve $amount_gold pieces of gold."
        image=wesnoth-icon.png
    [/message]
    {CLEAR_VARIABLE amount_gold}

    [sound]
        name=gold.ogg
    [/sound]

    [gold]
        side={SIDE}
        amount={AMOUNT}
    [/gold]
#enddef

#define TLB_LIMIT_ARMY SIDE RACE_NAME TYPES TOTAL VARIABLE
[event]
	name=prestart
	
	[set_variable]
		name={VARIABLE}
		value={TOTAL}
	[/set_variable]
[/event]

[event]
	name=recruit,recall
	first_time_only=no
	
	[filter]
		side={SIDE}
		{RACE_NAME}
	[/filter]

	[set_variable]
		name={VARIABLE}
		sub=1
	[/set_variable]
	
	[if]
		[variable]
			name={VARIABLE}
			equals=0
		[/variable]
		
		[then]
			[print]
				text=_ "No recruits/recalls left for this faction."
				size=28
				red,green,blue=255,0,0
			[/print]
			
			[disallow_recruit]
				side={SIDE}
				type={TYPES}
			[/disallow_recruit]
			
			[store_unit]
				[filter]
					side={SIDE}
					{RACE_NAME}
					[and]
						x,y=recall,recall
					[/and]
				[/filter]
			
				mode=append
				variable=disabled_recalls
				kill=yes
			[/store_unit]
		[/then]
		
		[else]
			[print]
				text=_ "${VARIABLE} recruits/recalls left for this faction."
				size=28
				red,green,blue=0,255,0
			[/print]
		[/else]
	[/if]
	
[/event]

[event]
	name=victory,defeat
	
	[clear_variable]
		name={VARIABLE}
	[/clear_variable]

        {FOREACH disabled_recalls i}
	
            [unstore_unit]
                variable=disabled_recalls[$i]
            [/unstore_unit]
        {NEXT i}
	
	#[unstore_unit]
        # 	variable=disabled_recalls
	#[/unstore_unit]
	
	{CLEAR_VARIABLE disabled_recalls}
[/event]
#enddef

#define DELAY TIME
[delay]
   time="{TIME}"
[/delay]
#enddef

#define TIME_OVER_DEFEAT
[event]
    name="time over"
    [message]
        speaker="narrator"
        image="wesnoth-icon.png"
        message= _ "You have failed to complete the scenario within the defined time limit. Please try again."
    [/message]
    [endlevel]
        result=defeat
    [/endlevel]
[/event]
#enddef

# Mahir's death event must be separate, as he later switches 'sides'

#define MAHIR_EARLY_DEATH
[event]
   name="last breath"
   [filter]
      id="Mahir"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Argh! I die!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Mahir"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]
#enddef

#define MORIN_DEATH_EVENT
[event]
   name="last breath"
   [filter]
      id="Morin"
   [/filter]
   [message]
      speaker="Jahin"
      message= _ "We needed that mage in our battles! All is lost now!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Morin"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]
#enddef

#define ANIMATED_PORTAL X Y
     [terrain_graphics]
        x={X}
        y={Y}
        [tile]
            x=0
            y=0
            [image]
                layer=0
                # wmlscope: start ignoring
                name="../halo/portal-shine1.png:100,../halo/portal-shine2.png:100,../halo/portal-shine3.png:100,../halo/portal-shine4.png:100,../halo/portal-shine5.png:100,../halo/portal-shine6.png:100,../halo/portal-shine7.png:100,../halo/portal-shine8.png:100,../halo/portal-shine7.png:100,../halo/portal-shine6.png:100,../halo/portal-shine5.png:100,../halo/portal-shine4.png:100,../halo/portal-shine3.png:100,../halo/portal-shine2.png:100"
                # wmlscope: stop ignoring
            [/image]
        [/tile]
    [/terrain_graphics]
#enddef

# Macros that are used only in scenario 24

#define ANIMATED_ORC X Y
        [terrain_graphics]
           x={X}
           y={Y}
           [tile]
              x=0
              y=0
              [image]
                 layer=0
                 name="../units/orcs/archer-bow-attack-1.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-2.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-3.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-4.png~RC(magenta>blue):100,../units/orcs/archer-bow.png~RC(magenta>blue):100"
              [/image]
           [/tile]
        [/terrain_graphics]
#enddef

#define RANGED_DAMAGE_MACRO_24

   [event]
      name="new turn"
      first_time_only=no

      [harm_unit]
         [filter]
            side=1
            [filter_location]
               x=33-54
               y=5-32
               terrain=G*
            [/filter_location]
         [/filter]

         fire_event=yes
         alignment=chaotic
         animate=yes
         amount=8
         damage_type=pierce
         ranged=ranged
      [/harm_unit]
   [/event]

#enddef

#define TLB_TELEPORTATION_RUNE SIDES RUNE X1 Y1 X2 Y2

        # Placing runes
        #[item]
        #    x,y={X1},{Y1}
	#    halo=scenery/rune{RUNE}.png
        #[/item]
        #
        #[item]
        #    x,y={X2},{Y2}
	#    halo=scenery/rune{RUNE}.png
        #[/item]

        {ANIMATED_PORTAL {X1} {Y1}}

	
	# Teleporting out
	[event]
	name=moveto
	first_time_only=no
        [filter]
            x={X1}
            y={Y1}
            side={SIDES}
        [/filter]
        
        [if]
	
			  [then]
				
				[remove_shroud]
					side=$side_number
					x={X2}
					y={Y2}
					radius=1
				[/remove_shroud]
				
				# If there's a unit on the other rune, it swaps places
				[if]
					[have_unit]
						x={X2}
						y={Y2}
					[/have_unit]
					[then]
						{VARIABLE temp_teleportee yes}
						[store_unit]
							[filter]
								x={X2}
								y={Y2}
							[/filter]
							kill=yes
							variable=stored_unit
						[/store_unit]
						{VARIABLE stored_unit.x {X1}}
						{VARIABLE stored_unit.y {Y1}}
					[/then]
				[/if]
				
				[scroll_to]
					x,y={X2},{Y2}
					check_fogged=false
				[/scroll_to]
				
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
			
				[teleport]
				  [filter]
					x={X1}
					y={Y1}
				  [/filter]
				  x={X2}
				  y={Y2}
				[/teleport]
				
				[redraw]
					side=1,2
				[/redraw]
				
				[if]
				
					[then]
						[unstore_unit]
							variable=stored_unit
						[/unstore_unit]
						{CLEAR_VARIABLE stored_unit}
						{CLEAR_VARIABLE temp_teleportee}
					[/then]
				[/if]
				
			[/then]
		[/if]
    [/event]
    
   # Teleporting back
	[event]
	name=moveto
	first_time_only=no
		[filter]
		x={X2}
		y={Y2}
		side={SIDES}
		[/filter]
        
        [if]
		
			#[not]
			#	[have_unit]
			#		x={X1}
			#		y={Y1}
			#	[/have_unit]
			#[/not]
			[then]
				
				[remove_shroud]
					side=$side_number
					x={X1}
					y={Y1}
					radius=1
				[/remove_shroud]
				
				# If there's a unit on the other rune, it swaps places
				[if]
					[have_unit]
						x={X1}
						y={Y1}
					[/have_unit]
					[then]
						{VARIABLE temp_teleportee yes}
						[store_unit]
							[filter]
								x={X1}
								y={Y1}
							[/filter]
							kill=yes
							variable=stored_unit
						[/store_unit]
						{VARIABLE stored_unit.x {X2}}
						{VARIABLE stored_unit.y {Y2}}
					[/then]
				[/if]
				
				[scroll_to]
					x,y={X1},{Y1}
					check_fogged=false
				[/scroll_to]
				
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[teleport]
					[filter]
						x={X2}
						y={Y2}
					[/filter]
				x={X1}
				y={Y1}
				[/teleport]
				
				[redraw]
					side=1,2
				[/redraw]
				
				[if]
				
					[then]
						[unstore_unit]
							variable=stored_unit
						[/unstore_unit]
						{CLEAR_VARIABLE stored_unit}
						{CLEAR_VARIABLE temp_teleportee}
					[/then]
				[/if]
				
			[/then]
		[/if]
	[/event]
#enddef
