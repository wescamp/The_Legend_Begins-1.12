#textdomain wesnoth-The_Legend_Begins

#ifver WESNOTH_VERSION >= 1.11.1

#define WEAPON_SPECIAL_CAPTION CAPTION
#enddef

#else

#define WEAPON_SPECIAL_CAPTION CAPTION
{CAPTION}+":
"#enddef

#endif

#ifver WESNOTH_VERSION >= 1.11.1

#define ABILITY_CAPTION _CAPTION
#enddef

#else

#define ABILITY_CAPTION _CAPTION
{_CAPTION}+":
"#enddef

#endif

# all forest terrains (tree, mushroom) and farmland
#define VEGETATED_TERRAINS
*^F*, *^Uf, *^Ufi, *^Gvs #enddef

#define __TSTRING_NOTES
    _ "

Notes: "#enddef

#define SPECIAL_NOTES_VEGETATED_TERRAINS
    _ " Vegetated terrains are forest, great tree, farmland and mushroom grove hexes."#enddef

#define __ABILITY_TSTRING_DAUNTLESS_NAME
    _ "dauntless"#enddef
#define __ABILITY_TSTRING_DAUNTLESS_DESC
    {ABILITY_CAPTION  ( _ "Dauntless")}+_"While attacking, this unit's resistances are doubled, up to a maximum of 50. Weaknesses are not affected."#enddef

#define __ABILITY_TSTRING_SYLVAN_SPARK_NAME
    _ "sylvan spark"
#enddef
#define __ABILITY_TSTRING_SYLVAN_SPARK_DESC
    {ABILITY_CAPTION  ( _ "Sylvan Spark")}+_ "While in vegetated terrains, the unit will heal itself 5 hp per turn. If it is poisoned, it will remove the poison instead of healing."+{__TSTRING_NOTES}+{SPECIAL_NOTES_VEGETATED_TERRAINS}
#enddef

# wmlindent: stop ignoring

#define ABILITY_DAUNTLESS
    [resistance]
        id=dauntless
        name={__ABILITY_TSTRING_DAUNTLESS_NAME}
        description={__ABILITY_TSTRING_DAUNTLESS_DESC}
        name_inactive={__ABILITY_TSTRING_DAUNTLESS_NAME}
        description_inactive={__ABILITY_TSTRING_DAUNTLESS_DESC}
        multiply=2
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        [filter_base_value]
            greater_than=0
        [/filter_base_value]
        active_on=offense
    [/resistance]
#enddef

#define __ABILITY_TSTRING_PROTECTION
    name= _ "protection"
    description={ABILITY_CAPTION  ( _ "Protection")}+_"Adjacent units of lower level from this side receive a +20% bonus to all resistances (up to a maximum of 50%)."
#enddef

#define ABILITY_PROTECTION_LEVEL_2
    [resistance]
        id=protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        {__ABILITY_TSTRING_PROTECTION}
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
                [or]
                    level=1
                [/or]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define ABILITY_PROTECTION_LEVEL_3
    [resistance]
        id=protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        {__ABILITY_TSTRING_PROTECTION}
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
                [or]
                    level=1
                [/or]
                [or]
                    level=2
                [/or]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define ABILITY_PROTECTION_LEVEL_4
    [resistance]
        id=protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        {__ABILITY_TSTRING_PROTECTION}
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
                [or]
                    level=1
                [/or]
                [or]
                    level=2
                [/or]
                [or]
                    level=3
                [/or]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define __ABILITY_TSTRING_TERROR
    name= _ "terror"
    description={ABILITY_CAPTION  ( _ "Terror")}+_"This unit can frighten enemy units that are next to it, making them fight worse.

Adjacent enemy units of lower level will do less damage in battle. When an enemy unit of the same or lower level is adjacent and engages in combat, its attacks do 15% less damage times the difference in their levels + 15%."
#enddef

#define ABILITY_TERROR_LEVEL_1
    [leadership]
        id=terror
        value=-30
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_2
    [leadership]
        id=terror
        value=-45
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_TERROR_LEVEL_3
    [leadership]
        id=terror
        value=-60
        cumulative=no
        {__ABILITY_TSTRING_TERROR}
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-45
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-30
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=terror
        value=-15
        cumulative=no
        affect_self=no
        affect_allies=no
        affect_enemies=yes
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define SPECIAL_NOTES_INSPIRE
_" The presence of this unit inspires own units next to it to deal more damage in combat, though this only applies to units of lower or equal level."#enddef

#define ABILITY_INSPIRE_LEVEL_3
    # Canned definition of the Inspire (level 3) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=40
        cumulative=no
        name= _ "inspire"
        description={ABILITY_CAPTION  ( _ "Inspire")}+_"This unit can inspire own L0, L1, L2, or L3 units that are next to it, making them fight better. Adjacent own units of L3 will do more 10% more damage; L2 units will do 20% more, L1 will do 30% more, and L0 units will do 40% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=30
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define ABILITY_PROTECTION
    [resistance]
        id=protection
        add=20
        max_value=50
        apply_to=blade,pierce,impact,fire,cold,arcane
        name= _ "protection"
        description={ABILITY_CAPTION  ( _ "Protection")}+_"Adjacent units of level 1 or below from this side receive a +20% bonus to all resistances (up to a maximum of 50%)."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
                [or]
                    level=1
                [/or]
            [/filter]
        [/affect_adjacent]
    [/resistance]
#enddef

#define ABILITY_PHYSICAL_ENDURANCE
    [dummy]
        id=physical_endurance
        name= _ "physical endurance"
        description={ABILITY_CAPTION ( _ "Physical Endurance")}+_"Units with this ability instantly regenerate half of the damage dealt to them unless its type is arcane, or the damage amount would kill them otherwise (greater than or equals their remaining HP)."
    [/dummy]
[/abilities]

    [event]
        id=ability_physical_endurance_attacker_hits
        name=attacker hits
        first_time_only=no
        [filter_second]
            ability=physical_endurance
        [/filter_second]
        [filter_attack]
            [not]
                type=arcane
            [/not]
        [/filter_attack]

        [fire_event]
            name=physical endurance handler
            [primary_unit]
                x,y=$x2,$y2
            [/primary_unit]
            [secondary_unit]
                x,y=$x1,$y1
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        id=ability_physical_endurance_defender_hits
        name=defender hits
        first_time_only=no
        [filter]
            ability=physical_endurance
        [/filter]
        [filter_second_attack]
            [not]
                type=arcane
            [/not]
        [/filter_second_attack]

        [fire_event]
            name=physical endurance handler
            [primary_unit]
                x,y=$x1,$y1
            [/primary_unit]
            [secondary_unit]
                x,y=$x2,$y2
            [/secondary_unit]
        [/fire_event]
    [/event]
    [event]
        id=ability_physical_endurance_handler
        name=physical endurance handler
        first_time_only=no

        # Primary unit: physical endurance user
        # Secondary unit: attacker/defender

        [if]
            {VARIABLE_CONDITIONAL unit.hitpoints greater_than 0}
            [then]
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp to_variable damage_inflicted}
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp divide      2}
                {VARIABLE_OP temp_PHYSICAL_ENDURANCE_restore_hp round       ceil}

                [heal_unit]
                    [filter]
                        x,y=$x1,$y1
                    [/filter]
                    amount=$temp_PHYSICAL_ENDURANCE_restore_hp
                [/heal_unit]

                [floating_text]
                    x,y=$x1,$y1
                    text="<span color='green'>$heal_amount</span>" # wmllint: ignore
                [/floating_text]

                {CLEAR_VARIABLE temp_PHYSICAL_ENDURANCE_restore_hp}
            [/then]
        [/if]
    [/event]

[+abilities]
#enddef

#define SPECIAL_NOTES_PROTECTION
_ "This unit can protect those of level 0 and 1 around them, granting them extra resistances."#enddef

#define SPECIAL_NOTES_PHYSICAL_ENDURANCE
    _ " This unit will instantly regenerate half of the damage deal on it with non-arcane attacks, unless it would otherwise kill it." #enddef

#define ABILITY_MURDERLUST
  [dummy]
      id=murderlust
      name= _ "murderlust"
      description={ABILITY_CAPTION  ( _ "Murderlust")}+_"Whenever this unit kills another unit, it heals 8 hp."
  [/dummy]
#enddef

#define SPECIAL_NOTES_MURDERLUST
_ " Whenever this unit kills another unit, it heals 8 hp."
#enddef

#define MURDER_LUST_EVENT
[event]
    name=die
    first_time_only=no
    [filter_second]
        ability=murderlust
    [/filter_second]
    [heal_unit]
	[filter]
	    id=$second_unit.id
	[/filter]
	amount=8
	animate=yes
    [/heal_unit]
[/event]
#enddef

#define SPECIAL_NOTES_STUN
_ " This unit is able to stun its enemies, disrupting their zones of control."#enddef

#define WEAPON_SPECIAL_STUN
    [damage]
        id=stun
        name= _ "stun"
        description= _ "This attack hits so hard that the defender is dazed and can no longer enforce a zone of control. The effect wears off on the defender's next turn."
        multiply=1
    [/damage]
#enddef

#define STUN_ATTACK_EVENT
[event]
    name=attacker_hits
    first_time_only=no

    [filter_attack]
        special=stun
    [/filter_attack]

    [filter_second]
        [not]
            level=0
        [/not]
    [/filter_second]

    [if]
        [variable]
            name=second_unit.variables.stunned
            boolean_equals=no
        [/variable]
        [then]
            {VARIABLE second_unit.variables.stunned yes}

            [if]
                [variable]
                    name=second_unit.gender
                    equals=female
                [/variable]

                [then]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "female^stunned"
                    [/set_variable]
                [/then]

                [else]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "stunned"
                    [/set_variable]
                [/else]
            [/if]

            [unstore_unit]
                variable=second_unit
                find_vacant=no
                text=$tmp_stunned_text
                red,green,blue=196,196,128
            [/unstore_unit]

            [object]
                silent=yes
                duration=level

                [filter]
                    x,y=$x2,$y2
                [/filter]

                [effect]
                    apply_to=image_mod
                    replace="CS(50,50,0)"
                [/effect]

                [effect]
                    apply_to=ellipse
                    ellipse="misc/ellipse-nozoc"
                [/effect]

                [effect]
                    apply_to=zoc
                    value=no
                [/effect]
            [/object]

            [clear_variable]
                name=tmp_stunned_text
            [/clear_variable]
        [/then]
    [/if]
[/event]

[event]
    name=turn refresh
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [variables]
                    stunned=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=stunned
    [/store_unit]

    {FOREACH stunned i}
        {VARIABLE stunned[$i].variables.stunned no}

        [unstore_unit]
            variable=stunned[$i]
        [/unstore_unit]

        [object]
            silent=yes
            duration=level

            [filter]
                x,y=$stunned[$i].x,$stunned[$i].y
            [/filter]

            [effect]
                apply_to=image_mod
                replace="NOP()"
            [/effect]

            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse"
            [/effect]

            [effect]
                apply_to=zoc
                value=yes
            [/effect]
        [/object]
    {NEXT i}

    {CLEAR_VARIABLE stunned}
[/event]
#enddef
