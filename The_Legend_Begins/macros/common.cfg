#textdomain wesnoth-The_Legend_Begins

#define SPECIAL_NOTES_CHARM
_ " This unit ensorcels the minds of male-oriented units (humans, elves and dwarves), turning them against their allies."
#enddef

#define FLAME_BLAST_ANIMATION
    offset=0.0

    flame_sound_start_time=-401
    [flame_sound_frame]
        duration=1
    [/flame_sound_frame]
    [flame_sound_frame]
        duration=100
        sound=fire.wav
    [/flame_sound_frame]

    flame_blast_1_start_time=-400
    flame_blast_1_auto_vflip=no
    flame_blast_1_offset=1.0
    [flame_blast_1_frame]
        duration=400
        halo="misc/blank-hex.png:1,halo/flame-burst-1.png:50,halo/flame-burst-2.png:50,halo/flame-burst-3.png:50,halo/flame-burst-4.png:50,halo/flame-burst-5.png:50,halo/flame-burst-6.png:50,halo/flame-burst-7.png:50,halo/flame-burst-8.png:48,misc/blank-hex.png:1"
        halo_x,halo_y=-22,0
    [/flame_blast_1_frame]

    flame_blast_2_start_time=-350
    flame_blast_2_auto_vflip=no
    flame_blast_2_offset=1.0
    [flame_blast_2_frame]
        duration=400
        halo="misc/blank-hex.png:1,halo/flame-burst-1.png:50,halo/flame-burst-2.png:50,halo/flame-burst-3.png:50,halo/flame-burst-4.png:50,halo/flame-burst-5.png:50,halo/flame-burst-6.png:50,halo/flame-burst-7.png:50,halo/flame-burst-8.png:48,misc/blank-hex.png:1"
        halo_x,halo_y=-14,9
    [/flame_blast_2_frame]

    flame_blast_3_start_time=-300
    flame_blast_3_auto_vflip=no
    flame_blast_3_offset=1.0
    [flame_blast_3_frame]
        duration=400
        halo="misc/blank-hex.png:1,halo/flame-burst-1.png:50,halo/flame-burst-2.png:50,halo/flame-burst-3.png:50,halo/flame-burst-4.png:50,halo/flame-burst-5.png:50,halo/flame-burst-6.png:50,halo/flame-burst-7.png:50,halo/flame-burst-8.png:48,misc/blank-hex.png:1"
        halo_x,halo_y=0,12
    [/flame_blast_3_frame]

    flame_blast_4_start_time=-250
    flame_blast_4_auto_vflip=no
    flame_blast_4_offset=1.0
    [flame_blast_4_frame]
        duration=400
        halo="misc/blank-hex.png:1,halo/flame-burst-1.png:50,halo/flame-burst-2.png:50,halo/flame-burst-3.png:50,halo/flame-burst-4.png:50,halo/flame-burst-5.png:50,halo/flame-burst-6.png:50,halo/flame-burst-7.png:50,halo/flame-burst-8.png:48,misc/blank-hex.png:1"
        halo_x,halo_y=14,9
    [/flame_blast_4_frame]

    flame_blast_5_start_time=-200
    flame_blast_5_auto_vflip=no
    flame_blast_5_offset=1.0
    [flame_blast_5_frame]
        duration=400
        halo="misc/blank-hex.png:1,halo/flame-burst-1.png:50,halo/flame-burst-2.png:50,halo/flame-burst-3.png:50,halo/flame-burst-4.png:50,halo/flame-burst-5.png:50,halo/flame-burst-6.png:50,halo/flame-burst-7.png:50,halo/flame-burst-8.png:48,misc/blank-hex.png:1"
        halo_x,halo_y=22,0
    [/flame_blast_5_frame]
#enddef

#define FLAME_BLAST_AFFECTS_SELF
    flame_blast_1_offset=0.0
    flame_blast_2_offset=0.0
    flame_blast_3_offset=0.0
    flame_blast_4_offset=0.0
    flame_blast_5_offset=0.0
#enddef

# SCENARIO 48A MACROS
# lava spread (copied from HttT)

# Settings for a volcanic underground

#define UNDERGROUND_VOLCANO RED GREEN BLUE
    #
    # -30, -40, -40 are the default good values for an underground
    # reddish hue
    #
    [time]
        id=underground_volcano
        name= _ "Volcanic Underground"
        image=misc/schedule-underground.png
        lawful_bonus=-25
        red={RED}
        green={GREEN}
        blue={BLUE}
    [/time]
#enddef

#define VOLCANIC_UNDERGROUND_SCHEDULE

    {UNDERGROUND_VOLCANO -27 -37 -37}
    {UNDERGROUND_VOLCANO -28 -38 -38}
    {UNDERGROUND_VOLCANO -32 -42 -42}
    {UNDERGROUND_VOLCANO -36 -46 -46}
    {UNDERGROUND_VOLCANO -37 -47 -47}
    {UNDERGROUND_VOLCANO -36 -46 -46}
    {UNDERGROUND_VOLCANO -32 -42 -42}
    {UNDERGROUND_VOLCANO -28 -38 -38}
#enddef

# Main

#define NEXT_LAVA
    [store_locations]
        variable=potential_locs
        terrain=Xu
        [filter_adjacent_location]
            terrain=U*, Re
            [filter_adjacent_location]
                terrain=U*, Re
                count=4-5
            [/filter_adjacent_location]
        [/filter_adjacent_location]
        [not]
            # don't start near the existing lava
            terrain=Ql
            radius=5
        [/not]
    [/store_locations]
    [if]
        [variable]
            name=potential_locs.length
            greater_than=0
        [/variable]
        [then]
            {VARIABLE lava_count 0}
            {VARIABLE randrange $potential_locs.length}
            {VARIABLE_OP randrange sub 1}
            {VARIABLE randrange "0..$randrange"}
            {RANDOM $randrange}
            {CLEAR_VARIABLE lava_body}
            {VARIABLE lava_body.x $potential_locs[$random].x}
            {VARIABLE lava_body.y $potential_locs[$random].y}
            [terrain]
                x=$lava_body.x
                y=$lava_body.y
                terrain=Ql
            [/terrain]
            {CLEAR_VARIABLE potential_locs}
            {CLEAR_VARIABLE randrange}
        [/then]
    [/if]
#enddef

# Starter

#define EXPAND_LAVA
    # the lava should expand to any cave floor that is not next to a cavewall,
    # or cave floor that is next to cavewall that is already next to lava
    # also if it comes near another lavabody, it should not expand in that direction

    # first we store cavewall that is not already next to this lava
    [store_locations]
        variable=far_walls
        terrain=Xu
        [not]
            find_in=lava_body
            radius=1
        [/not]
    [/store_locations]

    # next we store lava that is not part of this body
    [store_locations]
        variable=far_lava
        terrain=Ql
        [not]
            find_in=lava_body
        [/not]
    [/store_locations]

    # now we store cave floor nearby that doesn't approach the bad stuff
    [store_locations]
        variable=good_floor
        terrain=U*,Re
        [and]
            find_in=lava_body
            radius=1
        [/and]
        [not]
            find_in=far_walls
            radius=1
        [/not]
        [not]
            find_in=far_lava
            radius=1
        [/not]
        [not]
            # don't go anywhere near the cave floor around the scepter
            x,y=$scepter_x,$scepter_y
            radius=4
            [filter_radius]
                terrain=U*,Re
            [/filter_radius]
        [/not]
    [/store_locations]

    [if]
        [variable]
            name=good_floor.length
            greater_than=0
        [/variable]
        [then]
            {FOREACH good_floor i}
                [terrain]
                    x=$good_floor[$i].x
                    y=$good_floor[$i].y
                    terrain=Ql
                [/terrain]
            {NEXT i}
            [store_locations]
                variable=lava_body
                find_in=lava_body
                [or]
                    find_in=good_floor
                [/or]
            [/store_locations]
        [/then]
        [else]
            # this lava can't expand so force a new eruption
            {NEXT_LAVA}
        [/else]
    [/if]
    {CLEAR_VARIABLE far_walls}
    {CLEAR_VARIABLE far_lava}
    {CLEAR_VARIABLE good_floor}

    # everyone on lava dies
    # exceptions Greth (if you still have him)/ Loyal Spectre, Loyal Drake Bruner-line
    [kill]
        [not]
            type=Sky Drake,Drake Glider,Hurricane Drake,Spectre,Drake Burner,Drake Flare,Drake Flameheart,Fire Drake,Inferno Drake
        [/not]
        [filter_location]
            terrain=Ql
        [/filter_location]
        animate=yes
        fire_event=yes
    [/kill]
#enddef

# Event used in scenario

#define SCENARIO_EVENT_LAVA_EXPANSION

             [event]
                name=start
                {NEXT_LAVA}
             [/event]

             [event]
                name=moveto
                first_time_only=no
                [allow_undo]
                [/allow_undo]
                [filter]
                    side=1
                [/filter]
                {VARIABLE_OP rumble_test rand "1..35"}
                [if]
                    [variable]
                        name=rumble_test
                        numerical_equals=1
                    [/variable]
                    [then]
                        {QUAKE "rumble.ogg"}
                        {VARIABLE_OP lava_count add 1}
                        {EXPAND_LAVA}

                        # Reset the counter if it gets too large (it slows things down)
                        [if]
                            [variable]
                                name=lava_count
                                numerical_equals=3
                            [/variable]
                            [then]
                                {NEXT_LAVA}
                            [/then]
                        [/if]
                    [/then]
                [/if]
                {CLEAR_VARIABLE rumble_test}
            [/event]

#enddef 

#define ILLUMINATED_UNDERGROUND X Y
    [store_locations]
        x,y={X},{Y}
        radius=5
        variable=illuminated_locations2
    [/store_locations]

    [time_area]
        find_in=illuminated_locations2
        {DEFAULT_SCHEDULE_DUSK}
    [/time_area]

    {CLEAR_VARIABLE illuminated_locations2}
#enddef

#define ABILITY_OBSCURE
    # Canned definition of the Obscures ability to be included in an
    # [abilities] clause.
    [illuminates]
        id=obscure
        value=-25
        min_value=-25
        cumulative=no
        name= _ "obscures"
        female_name= _ "female^obscures"
        description= _ "Obscures:
This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse.

Any units adjacent to this unit will fight as if it were dusk when it is day, and as if it were night when it is dusk."
        affect_self=yes
    [/illuminates]
#enddef

#define SPECIAL_NOTES_OBSCURE
    _ " This unit darkens the surrounding area, making chaotic units fight better, and lawful units fight worse." #enddef

#define NARRATOR_MESSAGE MESSAGE_TEXT
    [message]
        speaker=narrator
        message={MESSAGE_TEXT}
        image="wesnoth-icon.png"
    [/message]
#enddef

#define VARIABLE_NUM_LESS_OR_EQUAL_THAN VARIABLE RVALUE
    [variable]
	name={VARIABLE}
	less_than_equal_to={RVALUE}
    [/variable]
#enddef

#define FAKE_SCENERY_ANIM IMAGE FRAMES X Y TIME
{VARIABLE animcounter 1}
[while]
    [variable]
	name=animcounter
	less_than_equal_to={FRAMES}
    [/variable]
    [do]
	[item]
	    x={X}
	    y={Y}
	    halo={IMAGE}-($animcounter).png
	[/item]
    
	[delay]
	    time={TIME}
	[/delay]
    
	[remove_item]
	    x,y={X},{Y}
	[/remove_item]
{NEXT animcounter}
#enddef

#define ILLUMINATING_BRAZIER X Y
    [item]
       x,y={X},{Y}
       image="items/brazier-lit1.png"
    [/item]

    [item]
        x,y={X},{Y}
        halo=halo/fire-aura.png
    [/item]

    [store_locations]
        x,y={X},{Y}
        radius=2

        variable=illuminated_locations
    [/store_locations]

    [time_area]
        find_in=illuminated_locations

        {SCHEDULE_ILLUMINATED_MIDNIGHT}
    [/time_area]

    {CLEAR_VARIABLE illuminated_locations}
#enddef

#define LOOT AMOUNT SIDE
    {VARIABLE amount_gold {AMOUNT}}
   
    [message]
        side_for={SIDE}
        speaker=narrator
        message= _ "You retrieve $amount_gold pieces of gold."
        image=wesnoth-icon.png
    [/message]
    {CLEAR_VARIABLE amount_gold}

    [sound]
        name=gold.ogg
    [/sound]

    [gold]
        side={SIDE}
        amount={AMOUNT}
    [/gold]
#enddef

#define SPECIAL_NOTES_INSPIRE
_" The presence of this unit inspires own units next to it to deal more damage in combat, though this only applies to units of lower or equal level."#enddef

#define ABILITY_INSPIRE_LEVEL_3
    # Canned definition of the Inspire (level 3) ability to be included in an
    # [abilities] clause.
    [leadership]
        id=inspire_0
        value=40
        cumulative=no
        name= _ "inspire"
        description= _ "Inspire:
This unit can inspire own L0, L1, L2, or L3 units that are next to it, making them fight better. Adjacent own units of L3 will do more 10% more damage; L2 units will do 20% more, L1 will do 30% more, and L0 units will do 40% more."
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=0
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_1
        value=30
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=1
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_2
        value=20
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=2
            [/filter]
        [/affect_adjacent]
    [/leadership]
    [leadership]
        id=inspire_3
        value=10
        cumulative=no
        affect_self=no
        [affect_adjacent]
            adjacent=n,ne,se,s,sw,nw
            [filter]
                level=3
            [/filter]
        [/affect_adjacent]
    [/leadership]
#enddef

#define WEAPON_SPECIAL_PRECISION
    [chance_to_hit]
        id=precision
        name= _ "precision"
        description= _ "Precision:
When used offensively, this attack always has at least a 70% chance to hit."
        value=70
        cumulative=yes
        active_on=offense
    [/chance_to_hit]
#enddef

#define UNDERGROUND_VOLCANO RED GREEN BLUE
    #
    # -30, -40, -40 are the default good values for an underground
    # reddish hue
    #
    [time]
        id=underground
        name= _ "Underground"
        image=misc/schedule-underground.png
        lawful_bonus=-25
        red={RED}
        green={GREEN}
        blue={BLUE}
    [/time]
#enddef

#define RECURRING_EVENTS
# Kojac, orcish archer

[event]
   name="last breath"
   [filter]
      id="Kojac"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Sorry, I have failed you, Jahin. May you have victory without me."
   [/message]
   [message]
      speaker="Jahin"
      message= _ "Rats! Without him, we can't have the orcs ally with us! We're doomed!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Kojac"
   [/filter]
   [endlevel]
      result="defeat"
   [/endlevel]
[/event]

# Gioviel, elvish avatar
# An Elven Elementalist
[event]
   name="last breath"
   [filter]
      id="Gioviel"
   [/filter]
   [message]
       speaker="Jahin"
       message= _ "The elves won't help us anymore, now that she is dead!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Gioviel"
   [/filter]
   [endlevel]
       result="defeat"
   [/endlevel]
[/event]

# Crylix, loyal saurian skirmisher, whom you rescue in scenario 4.
# If you fail to rescue this guy, then you are a sucker!
[event]
   name=last breath
   [filter]
      id="Crylix"
   [/filter]
   [message]
      speaker="narrator"
      image="wesnoth-icon.png"
      message= _ "This saurian would have been a great help to our heroes when they sought help from the saurians, but now that he is dead, they have to struggle for gaining the allies."
   [/message]
[/event]

# Galsh, loyal drake fighter

[event]
   name="last breath"
   [filter]
      id="Galsh"
   [/filter]
   [message]
      speaker="unit"
      message="Argh!"
   [/message]
   [message]
      speaker="Jahin"
      message= _ "He was mighty fighter and will be missed."
   [/message]
[/event]

# Galec, hero, Elvish Captain

[event]
   name="last breath"
   [filter]
      id="Galec"
   [/filter]
   [message]
      speaker="Galec"
      message= _ "Farewell friends, I now go to join my ancestors."
   [/message]
   [message]
      speaker="Jahin"
      message= _ "We have let the elven captain die! This is a disaster!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Galec"
   [/filter]
   [endlevel]
      result="defeat"
   [/endlevel]
[/event]

# Tarcyn, loyal Aragwaith Strongbow

[event]
   name="last breath"
   [filter]
      id="Tarcyn"
   [/filter]
   [message]
      speaker="Jahin"
      message= _ "He was a good commander and will be missed."
   [/message]
[/event]

# Kraag, loyal drake glider

[event]
   name="last breath"
   [filter]
      id="Kraag"
   [/filter]
   [message]
      speaker="Kraag"
      message= _ "Argh!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Kraag"
   [/filter]
   [message]
      speaker="Jahin"
      message= _ "We needed him as our messenger during this war! We're screwed now."
   [/message]
   [endlevel]
      result=defeat
   [/endlevel]
[/event]

# Ruk, loyal Orcish Sorcerer

[event]
   name="die"
   [filter]
      id="Ruk"
   [/filter]
   [message]
      speaker="Kojac"
      message= _ "Without the elder shaman we cannot recruit shamans or ogres anymore."
   [/message]
   [disallow_recruit]
      side=7
      type="Orcish Shaman,Young Ogre"
   [/disallow_recruit]
[/event]

# Greth, loyal drake glider

[event]
    name="die"
    [filter]
       id="Greth"
    [/filter]
    [message]
       speaker="Jahin"
       message= _ "It's a shame that we let him get killed. He could have been a useful scout."
    [/message]
[/event]

# Gashinar , High Dominant, Drake Enforcer

[event]
   name="die"
   [filter]
      id="Gashinar"
   [/filter]
   [message]
      speaker="Jahin"
      message= _ "Without the Drake Lord, the drakes will not be our allies anymore! All is lost now..."
   [/message]
   [endlevel]
      result=defeat
   [/endlevel]
[/event]

# Zayed, loyal cavalry

[event]
    name="die"
    [filter]
       id="Zayed"
    [/filter]
    [message]
       speaker="Zayed"
       message= _ "No! I didn't get to have any real adventures yet!"
    [/message]
[/event]

# Amorith, hero Fire Faerie
# Episode 2 only character

[event]
   name="last breath"
   [filter]
      id="Amorith"
   [/filter]
   [message]
       speaker="unit"
       message= _ "I never knew my demise would come so soon!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Amorith"
   [/filter]
   [endlevel]
       result="defeat"
   [/endlevel]
[/event]

# Jalin, hero Human Chieftain
# Episode 2 only character

[event]
   name="last breath"
   [filter]
      id="Jalin"
   [/filter]
   [message]
       speaker="unit"
       message= _ "After years of fighting, I meet my end like this?! Unacceptable!"
   [/message]
[/event]

[event]
   name="die"
   [filter]
      id="Jalin"
   [/filter]
   [endlevel]
       result="defeat"
   [/endlevel]
[/event]

# Trithdrol, Dwarven Warrior

# Apparently the same name is
# used by the main character of
# one of earlier works - 
# S T A R T  O F  T H E  W A R

[event]
   name="last breath"
   [filter]
      id="Trithdrol"
   [/filter]
   [message]
       speaker="unit"
       message= _ "This is not what I enlisted for!"
   [/message]
[/event]
#enddef

#define CATAPULT_CONFIGURATION TRIGGER_SIDE FILTER_WML
    [event]
	name=moveto
	first_time_only=no
	[filter]
	    side={TRIGGER_SIDE}
	    {FILTER_WML}
	    [filter_adjacent]
		side={TRIGGER_SIDE}
		type=Catapult
	    [/filter_adjacent]
	[/filter]
	[store_unit]
	    [filter]
		side={TRIGGER_SIDE}
		type=Catapult
		[filter_location]
		    [filter_adjacent_location]
			x=$unit.x
			y=$unit.y
		    [/filter_adjacent_location]
		[/filter_location]
	    [/filter]
	    kill=no
	    variable=catapult
	[/store_unit]
	[if]
	    [variable]
		name=launch
		not_equals=yes
	    [/variable]
	    [variable]
		name=catapult.moves
		equals=1
	    [/variable]
	    [then]
		[message]
		    speaker=narrator
		    image="wesnoth-icon.png"
		    message= _ "Do you want this unit to fire the catapult?"
		    [option]
			message= _ "Yes"
			[command]
			    [store_unit]
				[filter]
				    id=$unit.id
				[/filter]
				kill=no
				variable=launcher
			    [/store_unit]
			    {MODIFY_UNIT (id=$launcher.id) moves 0}
			    {MODIFY_UNIT (id=$launcher.id) attacks_left 0}
			    {MODIFY_UNIT (id=$catapult.id) moves 0}
			    {VARIABLE launch yes}
			    {NARRATOR_MESSAGE ( _ "To fire the catapult, right-click on the area you want to hit and click 'Launch Catapult'.
NOTE: This must be within a 20-hex radius.
Only one launch sequence may be initiated at a time.
A catapult can only be fired once per turn.")}
			    [set_menu_item]
				id=launch
				description= _ "Launch Catapult"
				[show_if]
				    [variable]
					name=launch
					equals=yes
				    [/variable]
				[/show_if]
				[filter_location]				    
			            [not]
					x,y=$catapult.x,$catapult.y
				    [/not]
				    [and]
					x,y=$catapult.x,$catapult.y
					radius=20
				    [/and]
				[/filter_location]
				[command]
				    [store_locations]
					x,y=$x1,$y1
					variable=spot
				    [/store_locations]
				    {VARIABLE launch no}
				    {RANDOM -1..1}
				    {VARIABLE_OP spot.x add $random}
				    {RANDOM -1..1}
				    {VARIABLE_OP spot.y add $random}
				    [if]
					[have_unit]
					    x,y=$spot.x,$spot.y
					[/have_unit]
					[then]
					    [store_unit]
						[filter]
						    x,y=$spot.x,$spot.y
						[/filter]
						kill=no
						variable=victim
					      [/store_unit]
					[/then]
				    [/if]
				    {VARIABLE boulder_path.x "$catapult.x|,$spot.x"}
				    {VARIABLE boulder_path.y "$catapult.y|,$spot.y"}
				    [move_unit_fake]
					type=Boulder
					x=$boulder_path.x
					y=$boulder_path.y
				    [/move_unit_fake]
				    {QUAKE "explosion.ogg"}
				    {FAKE_SCENERY_ANIM scenery/boom 25 $spot.x $spot.y 5}
				    {FAKE_SCENERY_ANIM misc/blank-hex 1 $x1 $y1 50}
				    [if]
					[have_unit]
					    find_in=victim
					[/have_unit]
					[then]
					    [switch]
						variable=victim.level
						[case]
						    value=0
						    [unstore_unit] 
							variable=victim
							{COLOR_HARM}
							text="99"
						    [/unstore_unit]
						    [kill]
						    x,y=$spot.x,$spot.y
						    fire_event=yes
						    animate=yes
						    [/kill]
						[/case]
						[case]
						    value=1
						    [unstore_unit] 
							variable=victim
							{COLOR_HARM}
							text="99"
						    [/unstore_unit]
						    [kill]
						    x,y=$spot.x,$spot.y
						    fire_event=yes
						    animate=yes
						    [/kill]
						[/case]
						[case]
						    value=2
						    {RANDOM 35..40}
						    {VARIABLE damage $random}
						    [if]
							{VARIABLE_NUM_LESS_OR_EQUAL_THAN victim.hitpoints $damage}
							[then]
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							    [kill]
							    x,y=$spot.x,$spot.y
							    fire_event=yes
							    animate=yes
							    [/kill]
							[/then]
							[else]
							    {VARIABLE hurt $damage}
							    {VARIABLE_OP hurt multiply -1}
							    {VARIABLE_OP victim.hitpoints add $hurt}
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							[/else]
						    [/if]
						[/case]
						[case]
						    value=3
						    {RANDOM 25..30}
						    {VARIABLE damage $random}
						    [if]
							{VARIABLE_NUM_LESS_OR_EQUAL_THAN victim.hitpoints $damage}
							[then]
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							    [kill]
							    x,y=$spot.x,$spot.y
							    fire_event=yes
							    animate=yes
							    [/kill]
							[/then]
							[else]
							    {VARIABLE hurt $damage}
							    {VARIABLE_OP hurt multiply -1}
							    {VARIABLE_OP victim.hitpoints add $hurt}
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							[/else]
						    [/if]
						[/case]
						[case]
						    value=4
						    {RANDOM 15..20}
						    {VARIABLE damage $random}
						    [if]
							{VARIABLE_NUM_LESS_OR_EQUAL_THAN victim.hitpoints $damage}
							[then]
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							    [kill]
							    x,y=$spot.x,$spot.y
							    fire_event=yes
							    animate=yes
							    [/kill]
							[/then]
							[else]
							    {VARIABLE hurt $damage}
							    {VARIABLE_OP hurt multiply -1}
							    {VARIABLE_OP victim.hitpoints add $hurt}
							    [unstore_unit] 
								variable=victim
								{COLOR_HARM}
								text="$damage"
							    [/unstore_unit]
							[/else]
						    [/if]
						[/case]
					    [/switch]
					[/then]
				    [/if]
				    [terrain]
					x,y=$spot.x,$spot.y
					terrain=^Dr
					layer=overlay
				    [/terrain]
				    [redraw]
				    [/redraw]
				    [store_unit]
					[filter]
					    [filter_location]
						[not]
						    x,y=$spot.x,$spot.y
						[/not]
						[and]
						    x,y=$spot.x,$spot.y
						    radius=1
						[/and]
					    [/filter_location]
					[/filter]
					kill=no
					variable=collateral_damage
				    [/store_unit]
				    [if]
					[have_unit]
					    find_in=collateral_damage
					[/have_unit]
					[then]
					    {FOREACH collateral_damage i}
						[store_locations]
						    x,y=$collateral_damage[$i].x,$collateral_damage[$i].y
						    variable=harm_loc
						[/store_locations]
						[switch]
						    variable=collateral_damage[$i].level
						    [case]
							value=0
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="50"
							[/unstore_unit]
							[kill]
							x,y=$harm_loc.x,$harm_loc.y
							fire_event=yes
							animate=yes
							[/kill]
						    [/case]
						    [case]
							value=1
							{RANDOM 20..25}
							{VARIABLE collat_damage $random}
							[if]
							    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
							    [then]
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
								[kill]
								x,y=$harm_loc.x,$harm_loc.y
								fire_event=yes
								animate=yes
								[/kill]
							    [/then]
							    [else]
								{VARIABLE hurt_collat $collat_damage}
								{VARIABLE_OP hurt_collat multiply -1}
								{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
							    [/else]
							[/if]
						    [/case]
						    [case]
							value=2
							{RANDOM 10..15}
							{VARIABLE collat_damage $random}
							[if]
							    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
							    [then]
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
								[kill]
								x,y=$harm_loc.x,$harm_loc.y
								fire_event=yes
								animate=yes
								[/kill]
							    [/then]
							    [else]
								{VARIABLE hurt_collat $collat_damage}
								{VARIABLE_OP hurt_collat multiply -1}
								{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
							    [/else]
							[/if]
						    [/case]
						    [case]
							value=3
							{RANDOM 5..10}
							{VARIABLE collat_damage $random}
							[if]
							    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
							    [then]
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
								[kill]
								x,y=$harm_loc.x,$harm_loc.y
								fire_event=yes
								animate=yes
								[/kill]
							    [/then]
							    [else]
								{VARIABLE hurt_collat $collat_damage}
								{VARIABLE_OP hurt_collat multiply -1}
								{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="$collat_damage"
								[/unstore_unit]
							    [/else]
							[/if]
						    [/case]
						    [case]
							value=4
							{VARIABLE collat_damage 1}
							[if]
							    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints 1}
							    [then]
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="1"
								[/unstore_unit]
								[kill]
								x,y=$harm_loc.x,$harm_loc.y
								fire_event=yes
								animate=yes
								[/kill]
							    [/then]
							    [else]
								{VARIABLE_OP collateral_damage[$i].hitpoints add -1}
								[unstore_unit] 
								variable=collateral_damage[$i]
								{COLOR_HARM}
								text="1"
								[/unstore_unit]
							    [/else]
							[/if]
						    [/case]
						[/switch]
					    {NEXT i}
					[/then]
				    [/if]
				    [redraw]
				    [/redraw]
				    {CLEAR_VARIABLE harm_loc,hurt_collat,hurt,damage,victim,catapult,launcher,found_victim,boulder_path,spot,collat_damage,collateral_damage}
				[/command]
			    [/set_menu_item]
			[/command]
		    [/option]
		    [option]
			message= _ "No"
			[command]
			    [allow_undo]
			    [/allow_undo]
			[/command]
		    [/option]
		[/message]
	    [/then]
	[/if]
    [/event]

    [event]
	name=side turn
	first_time_only=no
	{MODIFY_UNIT (type=Catapult) moves 1}
    [/event]
#enddef

#define AI_CATAPULT_CONFIGURATION SIDE TO_SIDES FROM_X TO_X FROM_Y TO_Y EXTRA_SLF
    [event]
	name=side {SIDE} turn
	first_time_only=no
	{VARIABLE fire no}
	[if]
	    [have_unit]
		side={SIDE}
		type=Catapult
	    [/have_unit]
	    [then]
		{VARIABLE fire yes}
	    [/then]
	[/if]
	[if]
	    [variable]
		name=fire
		equals=yes
	    [/variable]
	    [then]
		[store_locations]
		    [filter]
			side={SIDE}
			type=Catapult
		    [/filter]
		    variable=catapult_coords
		[/store_locations]
		{RANDOM 1..2}
		[store_locations]
	            [not]
			find_in=catapult_coords
		    [/not]
		    [and]
			[filter]
			    side={TO_SIDES}
			[/filter]
			radius=$random
		    [/and]
		    [and]
			x,y={FROM_X}-{TO_X},{FROM_Y}-{TO_Y}
		    [/and]
		    {EXTRA_SLF}
		    variable=possible_victims
		[/store_locations]
		[if]
		    [have_location]
			find_in=possible_victims
		    [/have_location]
		    [then]
			{REPEAT $catapult_coords.length (

			    {RANDOM 0.."$($catapult_coords.length - 1)"}
			    {VARIABLE y $random}

			    {RANDOM 0.."$($possible_victims.length - 1)"}
			    {VARIABLE z $random}

			    {VARIABLE boulder_path.x "$catapult_coords[$y].x,$possible_victims[$z].x"}
			    {VARIABLE boulder_path.y "$catapult_coords[$y].y,$possible_victims[$z].y"}
			    [move_unit_fake]
				type=Boulder
				x=$boulder_path.x
				y=$boulder_path.y
			    [/move_unit_fake]
			    {QUAKE "explosion.ogg"}
			    {FAKE_SCENERY_ANIM scenery/boom 25 $possible_victims[$z].x $possible_victims[$z].y 1}
			    {FAKE_SCENERY_ANIM misc/blank-hex 1 $possible_victims[$z].x $possible_victims[$z].y 50}
			    [store_unit]
				[filter]
				    x,y=$possible_victims[$z].x,$possible_victims[$z].y
				[/filter]
				kill=no
				variable=the_victim
			    [/store_unit]
			    [if]
				[have_unit]
				    find_in=the_victim
				[/have_unit]
				[then]
				    [switch]
					variable=the_victim.level
					[case]
					    value=0
					    [unstore_unit] 
						variable=the_victim
						{COLOR_HARM}
						text="99"
					    [/unstore_unit]
					    [kill]
					    x,y=$possible_victims[$z].x,$possible_victims[$z].y
					    fire_event=yes
					    animate=yes
					    [/kill]
					[/case]
					[case]
					    value=1
					    [unstore_unit] 
						variable=the_victim
						{COLOR_HARM}
						text="99"
					    [/unstore_unit]
					    [kill]
					    x,y=$possible_victims[$z].x,$possible_victims[$z].y
					    fire_event=yes
					    animate=yes
					    [/kill]
					[/case]
					[case]
					    value=2
					    {RANDOM 35..40}
					    {VARIABLE damage $random}
					    [if]
						{VARIABLE_NUM_LESS_OR_EQUAL_THAN the_victim.hitpoints $damage}
						[then]
						    [unstore_unit] 
							variable=the_ictim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						    [kill]
						    x,y=$possible_victims[$z].x,$possible_victims[$z].y
						    fire_event=yes
						    animate=yes
						    [/kill]
						[/then]
						[else]
						    {VARIABLE hurt $damage}
						    {VARIABLE_OP hurt multiply -1}
						    {VARIABLE_OP the_victim.hitpoints add $hurt}
						    [unstore_unit] 
							variable=the_victim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						[/else]
					    [/if]
					[/case]
					[case]
					    value=3
					    {RANDOM 25..30}
					    {VARIABLE damage $random}
					    [if]
						{VARIABLE_NUM_LESS_OR_EQUAL_THAN the_victim.hitpoints $damage}
						[then]
						    [unstore_unit] 
							variable=the_victim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						    [kill]
						    x,y=$possible_victims[$z].x,$possible_victims[$z].y
						    fire_event=yes
						    animate=yes
						    [/kill]
						[/then]
						[else]
						    {VARIABLE hurt $damage}
						    {VARIABLE_OP hurt multiply -1}
						    {VARIABLE_OP the_victim.hitpoints add $hurt}
						    [unstore_unit] 
							variable=the_victim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						[/else]
					    [/if]
					[/case]
					[case]
					    value=4
					    {RANDOM 15..20}
					    {VARIABLE damage $random}
					    [if]
						{VARIABLE_NUM_LESS_OR_EQUAL_THAN the_victim.hitpoints $damage}
						[then]
						    [unstore_unit] 
							variable=the_victim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						    [kill]
						    x,y=$possible_victims[$z].x,$possible_victims[$z].y
						    fire_event=yes
						    animate=yes
						    [/kill]
						[/then]
						[else]
						    {VARIABLE hurt $damage}
						    {VARIABLE_OP hurt multiply -1}
						    {VARIABLE_OP the_victim.hitpoints add $hurt}
						    [unstore_unit] 
							variable=the_victim
							{COLOR_HARM}
							text="$damage"
						    [/unstore_unit]
						[/else]
					    [/if]
					[/case]
				    [/switch]
				[/then]
			    [/if]
			    [store_unit]
				[filter]
				    [filter_location]
					[not]
					    x,y=$possible_victims[$z].x,$possible_victims[$z].y
					[/not]
					[and]
					    x,y=$possible_victims[$z].x,$possible_victims[$z].y
					    radius=1
					[/and]
				    [/filter_location]
				[/filter]
				kill=no
				variable=collateral_damage
			    [/store_unit]
			    [terrain]
				x,y=$possible_victims[$z].x,$possible_victims[$z].y
				terrain=^Dr
				layer=overlay
			    [/terrain]
			    [redraw]
			    [/redraw]
			    [if]
				[have_unit]
				    find_in=collateral_damage
				[/have_unit]
				[then]
				    {FOREACH collateral_damage i}
					[store_locations]
					    x,y=$collateral_damage[$i].x,$collateral_damage[$i].y
					    variable=harm_loc
					[/store_locations]
					[switch]
					    variable=collateral_damage[$i].level
					    [case]
						value=0
						[unstore_unit] 
						    variable=collateral_damage[$i]
						    {COLOR_HARM}
						    text="99"
						[/unstore_unit]
						[kill]
						x,y=$harm_loc.x,$harm_loc.y
						fire_event=yes
						animate=yes
						[/kill]
					    [/case]
					    [case]
						value=1
						{RANDOM 20..25}
						{VARIABLE collat_damage $random}
						[if]
						    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
						    [then]
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
							[kill]
							x,y=$harm_loc.x,$harm_loc.y
							fire_event=yes
							animate=yes
							[/kill]
						    [/then]
						    [else]
							{VARIABLE hurt_collat $collat_damage}
							{VARIABLE_OP hurt_collat multiply -1}
							{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
						    [/else]
						[/if]
					    [/case]
					    [case]
						value=2
						{RANDOM 10..15}
						{VARIABLE collat_damage $random}
						[if]
						    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
						    [then]
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
							[kill]
							x,y=$harm_loc.x,$harm_loc.y
							fire_event=yes
							animate=yes
							[/kill]
						    [/then]
						    [else]
							{VARIABLE hurt_collat $collat_damage}
							{VARIABLE_OP hurt_collat multiply -1}
							{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
						    [/else]
						[/if]
					    [/case]
					    [case]
						value=3
						{RANDOM 5..10}
						{VARIABLE collat_damage $random}
						[if]
						    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints $collat_damage}
						    [then]
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
							[kill]
							x,y=$harm_loc.x,$harm_loc.y
							fire_event=yes
							animate=yes
							[/kill]
						    [/then]
						    [else]
							{VARIABLE hurt_collat $collat_damage}
							{VARIABLE_OP hurt_collat multiply -1}
							{VARIABLE_OP collateral_damage[$i].hitpoints add $hurt_collat}
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="$collat_damage"
							[/unstore_unit]
						    [/else]
						[/if]
					    [/case]
					    [case]
						value=4
						{VARIABLE collat_damage 1}
						[if]
						    {VARIABLE_NUM_LESS_OR_EQUAL_THAN collateral_damage[$i].hitpoints 1}
						    [then]
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="1"
							[/unstore_unit]
							[kill]
							x,y=$harm_loc.x,$harm_loc.y
							fire_event=yes
							animate=yes
							[/kill]
						    [/then]
						    [else]
							{VARIABLE_OP collateral_damage[$i].hitpoints add -1}
							[unstore_unit] 
							    variable=collateral_damage[$i]
							    {COLOR_HARM}
							    text="1"
							[/unstore_unit]
						    [/else]
						[/if]
					    [/case]
					[/switch]
				    {NEXT i}
				[/then]
			    [/if]
			    [redraw]
			    [/redraw]
			)}
			{CLEAR_VARIABLE damage,hurt,hurt_collat,collat_damage,collateral_damage,boulder_path,catapult_coords,the_victim,victim_found,possible_victims,random,fire,y,z,harm_loc}
		    [/then]
		[/if]
	    [/then]
	[/if]
    [/event]
#enddef

#define ABILITY_MURDERLUST
  [dummy]
      id=murderlust
      name= _ "murderlust"
      description= _ "Murderlust:
Whenever this unit kills another unit, it heals 8 hp."
  [/dummy]
#enddef

#define SPECIAL_NOTES_MURDERLUST
_ " Whenever this unit kills another unit, it heals 8 hp."
#enddef

#define MURDER_LUST_EVENT
[event]
    name=die
    first_time_only=no
    [filter_second]
        ability=murderlust
    [/filter_second]
    [heal_unit]
	[filter]
	    id=$second_unit.id
	[/filter]
	amount=8
	animate=yes
    [/heal_unit]
[/event]
#enddef

#define SPECIAL_NOTES_STUN
_ " This unit is able to stun its enemies, disrupting their zones of control."#enddef

#define WEAPON_SPECIAL_STUN
    [damage]
        id=stun
        name= _ "stun"
        description= _ "This attack hits so hard that the defender is dazed and can no longer enforce a zone of control. The effect wears off on the defender's next turn."
        multiply=1
    [/damage]
#enddef

#define STUN_ATTACK_EVENT
[event]
    name=attacker_hits
    first_time_only=no

    [filter_attack]
        special=stun
    [/filter_attack]

    [filter_second]
        [not]
            level=0
        [/not]
    [/filter_second]

    [if]
        [variable]
            name=second_unit.variables.stunned
            boolean_equals=no
        [/variable]
        [then]
            {VARIABLE second_unit.variables.stunned yes}

            [if]
                [variable]
                    name=second_unit.gender
                    equals=female
                [/variable]

                [then]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "female^stunned"
                    [/set_variable]
                [/then]

                [else]
                    [set_variable]
                        name=tmp_stunned_text
                        value= _ "stunned"
                    [/set_variable]
                [/else]
            [/if]

            [unstore_unit]
                variable=second_unit
                find_vacant=no
                text=$tmp_stunned_text
                red,green,blue=196,196,128
            [/unstore_unit]

            [object]
                silent=yes
                duration=level

                [filter]
                    x,y=$x2,$y2
                [/filter]

                [effect]
                    apply_to=image_mod
                    replace="CS(50,50,0)"
                [/effect]

                [effect]
                    apply_to=ellipse
                    ellipse="misc/ellipse-nozoc"
                [/effect]

                [effect]
                    apply_to=zoc
                    value=no
                [/effect]
            [/object]

            [clear_variable]
                name=tmp_stunned_text
            [/clear_variable]
        [/then]
    [/if]
[/event]

[event]
    name=turn refresh
    first_time_only=no

    [store_unit]
        [filter]
            side=$side_number
            [filter_wml]
                [variables]
                    stunned=yes
                [/variables]
            [/filter_wml]
        [/filter]
        variable=stunned
    [/store_unit]

    {FOREACH stunned i}
        {VARIABLE stunned[$i].variables.stunned no}

        [unstore_unit]
            variable=stunned[$i]
        [/unstore_unit]

        [object]
            silent=yes
            duration=level

            [filter]
                x,y=$stunned[$i].x,$stunned[$i].y
            [/filter]

            [effect]
                apply_to=image_mod
                replace="NOP()"
            [/effect]

            [effect]
                apply_to=ellipse
                ellipse="misc/ellipse"
            [/effect]

            [effect]
                apply_to=zoc
                value=yes
            [/effect]
        [/object]
    {NEXT i}

    {CLEAR_VARIABLE stunned}
[/event]
#enddef

# This is a list of custom TOD schedules

#define CLOUD_DAWN
    [time]
        id=dawn_cloud
        name= _ "Cloudy Dawn"
        image=misc/tod-schedule-cloudy.png~CROP(0,0,125,39)
        red, green, blue=-35, -35, -15
        sound=ambient/morning.ogg
    [/time]
#enddef

#define CLOUD_MORNING
    [time]
        id=morning_cloud
        name= _ "Cloudy Morning"
        image=misc/tod-schedule-cloudy.png~CROP(126,0,125,39)
        lawful_bonus=25
        red, green=-20, -20
    [/time]
#enddef

#define CLOUD_AFTERNOON
    [time]
        id=afternoon_cloud
        name= _ "Cloudy Afternoon"
        image=misc/tod-schedule-cloudy.png~CROP(253,0,125,39)
        lawful_bonus=25
        red, green=-20, -20
    [/time]
#enddef

#define CLOUD_DUSK
    [time]
        id=dusk_cloud
        name= _ "Cloudy Dusk"
        image=misc/tod-schedule-cloudy.png~CROP(0,40,125,39)
        red, green, blue=-15, -35, -35
        sound=ambient/night.ogg
    [/time]
#enddef

#define CLOUD_FIRST_WATCH
    [time]
        id=first_watch_cloud
        name= _ "Cloudy First Watch"
        image=misc/tod-schedule-cloudy.png~CROP(126,40,125,39)
        lawful_bonus=-25
        red, green, blue=-55, -45, -20
    [/time]
#enddef

#define CLOUD_SECOND_WATCH
    [time]
        id=second_watch_cloud
        name= _ "Cloudy Second Watch"
        image=misc/tod-schedule-cloudy.png~CROP(253,40,125,39)
        lawful_bonus=-25
        red, green, blue=-55, -45, -20
    [/time]
#enddef

#define DEFAULT_SCHEDULE_CLOUD_SET
{CLOUD_DAWN}
{CLOUD_MORNING}
{CLOUD_AFTERNOON}
{CLOUD_DUSK}
{CLOUD_FIRST_WATCH}
{CLOUD_SECOND_WATCH}
#enddef

#define TLB_WEATHER_SNOWFALL
    [terrain_graphics]
        map="
1

*"
        [tile]
            pos=1
            set_flag=snow
            no_flag=snow
        [/tile]

        [image]
            position=horizontal
            layer=1000
            name=weather/noweather.png
            [variant]
                tod=dawn,morning,afternoon,dusk,first_watch,second_watch,midnight
                name=weather/snow/snow-1.png:80,weather/snow/snow-2.png:80,weather/snow/snow-3.png:80,weather/snow/snow(4.png:80,weather/snow/snow-5.png:80
            [/variant]
        [/image]
    [/terrain_graphics]
#enddef

#define TLB_WEATHER_HEAVY_RAIN
    [terrain_graphics]
        map="
1
,1
1
,1"
        [tile]
            pos=1
            set_flag=rain
            no_flag=rain
        [/tile]

        [image]
            layer=1000
            name=weather/noweather.png
            [variant]
                tod=dawn_rain,morning_rain,afternoon_rain,dusk_rain,first_watch_rain,second_watch_rain
                name=weather/rain/rain-(1).png:80,weather/rain/rain-(2).png:80,weather/rain/rain-(3).png:80,weather/rain/rain-(4).png:80,weather/rain/rain-(5).png:80
            [/variant]
        [/image]
    [/terrain_graphics]

    [terrain_graphics]
        [tile]
            x=0
            y=0
            set_flag=rain
            no_flag=rain
        [/tile]

        [image]
            layer=1001
            name=weather/noweather.png
            [variant]
                tod=dawn_rain,morning_rain,afternoon_rain,dusk_rain,first_watch_rain,second_watch_rain
                name=weather/rain/rain-(1).png:80,weather/rain/rain-(2).png:80,weather/rain/rain-(3).png:80,weather/rain/rain-(4).png:80,weather/rain/rain-(5).png:80
            [/variant]
        [/image]
    [/terrain_graphics]
#enddef

#define TLB_WEATHER_NORMAL_RAIN
    [terrain_graphics]
        map="
1
1"

        [tile]
            pos=1
            set_flag=rain
            no_flag=rain
        [/tile]

        [image]
            layer=1000
            name=weather/noweather.png
            [variant]
                tod=dawn_rain,morning_rain,afternoon_rain,dusk_rain,first_watch_rain,second_watch_rain
                name=weather/rain/rain-1.png:80,weather/rain/rain-2.png:80,weather/rain/rain-3.png:80,weather/rain/rain-4.png:80,weather/rain/rain-5.png:80,weather/rain/rain-6.png:80,weather/rain/rain-7.png:80,weather/rain/rain-8.png:80
            [/variant]
        [/image]
    [/terrain_graphics]
#enddef

# For a rainy day...

#define RAIN_DAWN
    [time]
        id=dawn_rain
        name= _ "Rainy Dawn"
        image=misc/tod-schedule-rainy.png~CROP(0,0,125,39)
        red, green, blue=-35, -35, -15
        sound=ambient/morning.ogg
    [/time]
#enddef

#define RAIN_MORNING
    [time]
        id=morning_rain
        name= _ "Rainy Morning"
        image=misc/tod-schedule-rainy.png~CROP(126,0,125,39)
        lawful_bonus=25
        red, green=-20, -20
    [/time]
#enddef

#define RAIN_AFTERNOON
    [time]
        id=afternoon_rain
        name= _ "Rainy Afternoon"
        image=misc/tod-schedule-rainy.png~CROP(253,0,125,39)
        lawful_bonus=25
        red, green=-20, -20
    [/time]
#enddef

#define RAIN_DUSK
    [time]
        id=dusk_rain
        name= _ "Rainy Dusk"
        image=misc/tod-schedule-rainy.png~CROP(0,40,125,39)
        red, green, blue=-15, -35, -35
        sound=ambient/night.ogg
    [/time]
#enddef

#define RAIN_FIRST_WATCH
    [time]
        id=first_watch_rain
        name= _ "Rainy First Watch"
        image=misc/tod-schedule-rainy.png~CROP(126,40,125,39)
        lawful_bonus=-25
        red, green, blue=-55, -45, -20
    [/time]
#enddef

#define RAIN_SECOND_WATCH
    [time]
        id=second_watch_rain
        name= _ "Rainy Second Watch"
        image=misc/tod-schedule-rainy.png~CROP(253,40,125,39)
        lawful_bonus=-25
        red, green, blue=-55, -45, -20
    [/time]
#enddef

#define DEFAULT_SCHEDULE_RAIN_SET
{RAIN_DAWN}
{RAIN_MORNING}
{RAIN_AFTERNOON}
{RAIN_DUSK}
{RAIN_FIRST_WATCH}
{RAIN_SECOND_WATCH}
#enddef

#define TLB_LIMIT_ARMY SIDE RACE_NAME TYPES TOTAL VARIABLE
[event]
	name=prestart
	
	[set_variable]
		name={VARIABLE}
		value={TOTAL}
	[/set_variable]
[/event]

[event]
	name=recruit,recall
	first_time_only=no
	
	[filter]
		side={SIDE}
		{RACE_NAME}
	[/filter]

	[set_variable]
		name={VARIABLE}
		sub=1
	[/set_variable]
	
	[if]
		[variable]
			name={VARIABLE}
			equals=0
		[/variable]
		
		[then]
			[print]
				text=_ "No recruits/recalls left for this faction."
				size=28
				red,green,blue=255,0,0
			[/print]
			
			[disallow_recruit]
				side={SIDE}
				type={TYPES}
			[/disallow_recruit]
			
			[store_unit]
				[filter]
					side={SIDE}
					{RACE_NAME}
					[and]
						x,y=recall,recall
					[/and]
				[/filter]
			
				mode=append
				variable=disabled_recalls
				kill=yes
			[/store_unit]
		[/then]
		
		[else]
			[print]
				text=_ "${VARIABLE} recruits/recalls left for this faction."
				size=28
				red,green,blue=0,255,0
			[/print]
		[/else]
	[/if]
	
[/event]

[event]
	name=victory,defeat
	
	[clear_variable]
		name={VARIABLE}
	[/clear_variable]

        {FOREACH disabled_recalls i}
	
            [unstore_unit]
                variable=disabled_recalls[$i]
            [/unstore_unit]
        {NEXT i}
	
	#[unstore_unit]
        # 	variable=disabled_recalls
	#[/unstore_unit]
	
	{CLEAR_VARIABLE disabled_recalls}
[/event]
#enddef

#define DELAY TIME
[delay]
   time="{TIME}"
[/delay]
#enddef

#define TIME_OVER_DEFEAT
[event]
    name="time over"
    [message]
        speaker="narrator"
        image="wesnoth-icon.png"
        message= _ "You have failed to complete the scenario within the defined time limit. Please try again."
    [/message]
[/event]
#enddef

# I limited the strategic options of advancement for the main hero units

#define MAIN_CHARACTERS_ADVANCEMENT
[modify_unit]
    [filter]
        id="Maruful"
    [/filter]
    advances_to="Chevalier"
[/modify_unit]

[modify_unit]
    [filter]
        id="Fairuz"
    [/filter]
    advances_to="Swordsman"
[/modify_unit]

[modify_unit]
    [filter]
        id="Ashhab"
    [/filter]
    advances_to="Javelineer"
[/modify_unit]

[modify_unit]
    [filter]
        id="Mahir"
    [/filter]
    advances_to="Lieutenant"
[/modify_unit]
#enddef

#define HERO_DEATH_EVENTS
[event]
   name="last breath"
   [filter]
      id="Jahin"
   [/filter]
   [message]
      speaker="unit"
      message= _ "I can't die now! I still have much more to do!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Jahin"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Faria"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Farewell.. Jahin!"
   [/message]
   [message]
      speaker="Jahin"
      message="Faria! No!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Faria"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Sadia"
   [/filter]
   [message]
      speaker="unit"
      message= _ "This can't be the end! Or is it?"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Sadia"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Krog"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Trolls will not help Jahin without Krog!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Krog"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Maruful"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Argh! I fall, but the humans will be free!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Maruful"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Affan"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Ouch! This is what death feels like?!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Affan"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Fairuz"
   [/filter]
   [message]
      speaker="unit"
      message= _ "No, my friends need me!"
   [/message]
   [message]
      speaker="Sadia"
      message= _ "Screw that, I need you!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Fairuz"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]

[event]
   name="last breath"
   [filter]
      id="Ashhab"
   [/filter]
   [message]
      speaker="unit"
      message= _ "I deserved better than this!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Ashhab"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]
#enddef

# Mahir's death event must be separate, as he later switches 'sides'

#define MAHIR_EARLY_DEATH
[event]
   name="last breath"
   [filter]
      id="Mahir"
   [/filter]
   [message]
      speaker="unit"
      message= _ "Argh! I die!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Mahir"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]
#enddef

#define MORIN_DEATH_EVENT
[event]
   name="last breath"
   [filter]
      id="Morin"
   [/filter]
   [message]
      speaker="Jahin"
      message= _ "We needed that mage in our battles! All is lost now!"
   [/message]
[/event]

[event]
   name=die
   [filter]
       id="Morin"
   [/filter]
   [endlevel]
       result=defeat
   [/endlevel]
[/event]
#enddef

#define SCHEDULE_MIDNIGHT
[time]
   id=midnight
   name= _ "Midnight"
   image=schedule-midnight.png
   lawful_bonus=-30
   red=-45
   green=-35
   blue=-10
[/time]
#enddef

#define SCHEDULE_ILLUMINATED_MIDNIGHT
[time]
   id=midnight_illuminated
   name= _ "Illuminated Midnight"
   image=schedule-midnight-illuminated.png
   red=-40
   green=-40
   blue=-10
[/time]
#enddef

#define ANIMATED_PORTAL X Y
     [terrain_graphics]
        x={X}
        y={Y}
        [tile]
            x=0
            y=0
            [image]
                layer=0
                # wmlscope: start ignoring
                name="../halo/portal-shine1.png:100,../halo/portal-shine2.png:100,../halo/portal-shine3.png:100,../halo/portal-shine4.png:100,../halo/portal-shine5.png:100,../halo/portal-shine6.png:100,../halo/portal-shine7.png:100,../halo/portal-shine8.png:100,../halo/portal-shine7.png:100,../halo/portal-shine6.png:100,../halo/portal-shine5.png:100,../halo/portal-shine4.png:100,../halo/portal-shine3.png:100,../halo/portal-shine2.png:100"
                # wmlscope: stop ignoring
            [/image]
        [/tile]
    [/terrain_graphics]
#enddef

# Macros that are used only in scenario 24

#define ANIMATED_ORC X Y
        [terrain_graphics]
           x={X}
           y={Y}
           [tile]
              x=0
              y=0
              [image]
                 layer=0
                 name="../units/orcs/archer-bow-attack-1.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-2.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-3.png~RC(magenta>blue):100,../units/orcs/archer-bow-attack-4.png~RC(magenta>blue):100,../units/orcs/archer-bow.png~RC(magenta>blue):100"
              [/image]
           [/tile]
        [/terrain_graphics]
#enddef

#define RANGED_DAMAGE_MACRO_24

   #[event]
   #   name="new turn"
   #   first_time_only=no
   #   [if]
   #      [have_unit]
   #         side=1
   #         x=33-54
   #         y=5-32
   #      [/have_unit]
   #      [then]
   #         [store_locations]
   #            [filter]
   #               side=1
   #            [/filter]
   #            x=33-54
   #            y=5-32
   #            terrain=G*
   #            variable=vulnerable
   #         [/store_locations]
   #
   #         {FOREACH vulnerable i}
   #            [harm_unit]
   #               [filter]
   #                  x=$vulnerable[$i].x
   #                  y=$vulnerable[$i].y
   #               [/filter]
   #               fire_event=yes
   #               alignment=chaotic
   #               animate=yes
   #               ranged=ranged
   #               amount=8
   #               damage_type=pierce
   #            [/harm_unit]
   #         {NEXT i}
   #
   #         {CLEAR_VARIABLE vulnerable}
   #      [/then]
   #   [/if]
   #[/event]

   [event]
      name="new turn"
      first_time_only=no

      [harm_unit]
         [filter]
            side=1
            [filter_location]
               x=33-54
               y=5-32
               terrain=G*
            [/filter_location]
         [/filter]

         fire_event=yes
         alignment=chaotic
         animate=yes
         amount=8
         damage_type=pierce
         ranged=ranged
      [/harm_unit]
   [/event]

#enddef

#define TLB_TELEPORTATION_RUNE SIDES RUNE X1 Y1 X2 Y2

        # Placing runes
        #[item]
        #    x,y={X1},{Y1}
	#    halo=scenery/rune{RUNE}.png
        #[/item]
        #
        #[item]
        #    x,y={X2},{Y2}
	#    halo=scenery/rune{RUNE}.png
        #[/item]

        {ANIMATED_PORTAL {X1} {Y1}}

	
	# Teleporting out
	[event]
	name=moveto
	first_time_only=no
        [filter]
            x={X1}
            y={Y1}
            side={SIDES}
        [/filter]
        
        [if]
	
			  [then]
				
				[remove_shroud]
					side=$side_number
					x={X2}
					y={Y2}
					radius=1
				[/remove_shroud]
				
				# If there's a unit on the other rune, it swaps places
				[if]
					[have_unit]
						x={X2}
						y={Y2}
					[/have_unit]
					[then]
						{VARIABLE temp_teleportee yes}
						[store_unit]
							[filter]
								x={X2}
								y={Y2}
							[/filter]
							kill=yes
							variable=stored_unit
						[/store_unit]
						{VARIABLE stored_unit.x {X1}}
						{VARIABLE stored_unit.y {Y1}}
					[/then]
				[/if]
				
				[scroll_to]
					x,y={X2},{Y2}
					check_fogged=false
				[/scroll_to]
				
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X2},{Y2}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X2},{Y2}
				[/remove_item]
				[item]
					x,y={X2},{Y2}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
			
				[teleport]
				  [filter]
					x={X1}
					y={Y1}
				  [/filter]
				  x={X2}
				  y={Y2}
				[/teleport]
				
				[redraw]
					side=1,2
				[/redraw]
				
				[if]
				
					[then]
						[unstore_unit]
							variable=stored_unit
						[/unstore_unit]
						{CLEAR_VARIABLE stored_unit}
						{CLEAR_VARIABLE temp_teleportee}
					[/then]
				[/if]
				
			[/then]
		[/if]
    [/event]
    
   # Teleporting back
	[event]
	name=moveto
	first_time_only=no
		[filter]
		x={X2}
		y={Y2}
		side={SIDES}
		[/filter]
        
        [if]
		
			#[not]
			#	[have_unit]
			#		x={X1}
			#		y={Y1}
			#	[/have_unit]
			#[/not]
			[then]
				
				[remove_shroud]
					side=$side_number
					x={X1}
					y={Y1}
					radius=1
				[/remove_shroud]
				
				# If there's a unit on the other rune, it swaps places
				[if]
					[have_unit]
						x={X1}
						y={Y1}
					[/have_unit]
					[then]
						{VARIABLE temp_teleportee yes}
						[store_unit]
							[filter]
								x={X1}
								y={Y1}
							[/filter]
							kill=yes
							variable=stored_unit
						[/store_unit]
						{VARIABLE stored_unit.x {X2}}
						{VARIABLE stored_unit.y {Y2}}
					[/then]
				[/if]
				
				[scroll_to]
					x,y={X1},{Y1}
					check_fogged=false
				[/scroll_to]
				
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[delay]
					time=50
				[/delay]
				[item]
					x,y={X1},{Y1}
					halo=scenery/rune{RUNE}-glow.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				[delay]
					time=50
				[/delay]
				[remove_item]
					x,y={X1},{Y1}
				[/remove_item]
				[item]
					x,y={X1},{Y1}
					image=scenery/rune{RUNE}.png
				[/item]
				[redraw]
					side=1,2
				[/redraw]
				
				[teleport]
					[filter]
						x={X2}
						y={Y2}
					[/filter]
				x={X1}
				y={Y1}
				[/teleport]
				
				[redraw]
					side=1,2
				[/redraw]
				
				[if]
				
					[then]
						[unstore_unit]
							variable=stored_unit
						[/unstore_unit]
						{CLEAR_VARIABLE stored_unit}
						{CLEAR_VARIABLE temp_teleportee}
					[/then]
				[/if]
				
			[/then]
		[/if]
	[/event]
#enddef

